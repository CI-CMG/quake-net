AWSTemplateFormatVersion: 2010-09-09
Description: QuakeNet report generation stack

Parameters:
  DeploymentBucketName:
    Description: The deployment bucket
    Type: String
  RolePermissionsBoundary:
    Description: An optional permissions boundary to associate with roles
    Type: String
  ReportGenerationLambdaMemorySize:
    Description: The amount of memory for the report initiator lambda
    Type: Number
  ReportGenerationLambdaTimeout:
    Description: The timeout in seconds for the report initiator lambda
    Type: Number
  ReportGenerationLambdaConcurrency:
    Description: The maximum number of instances to create when processing queues
    Type: Number
    MinValue: 1
  ReportGenerationQueueArn:
    Type: String
  QuakeNetSourceBucketName:
    Type: String
  Version:
    Description: The build version
    Type: String


Conditions:
  HasRolePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - ""
          - !Ref RolePermissionsBoundary

Resources:
  ReportGenerationLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary:
        Fn::If:
          - HasRolePermissionsBoundary
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${RolePermissionsBoundary}
          - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        - PolicyName: SQS
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref ReportGenerationQueueArn
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ChangeMessageVisibility
        - PolicyName: S3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:s3:::${QuakeNetSourceBucketName}/*
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:s3:::${QuakeNetSourceBucketName}
                Action:
                  - s3:ListBucket



  ReportGenerationLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Generates a PDF report for a given month
      Code:
        S3Bucket: !Ref DeploymentBucketName
        S3Key: !Sub lambda/quake-net-report-initiator-${Version}-lambda.zip
      Handler: edu.colorado.cires.mgg.quakenet.lambda.pdfgen.PdfGenLambda::handleRequest
      Runtime: java11
      MemorySize: !Ref ReportGenerationLambdaMemorySize
      Timeout: !Ref ReportGenerationLambdaTimeout
      ReservedConcurrentExecutions: !Ref ReportGenerationLambdaConcurrency
      Role: !GetAtt ReportGenerationLambdaRole.Arn
      Environment:
        Variables:
          DOWNLOAD_BUCKET: !Ref QuakeNetSourceBucketName



  ReportGenerationLambdaQueueTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !Ref ReportGenerationQueueArn
      FunctionName: !GetAtt ReportGenerationLambda.Arn