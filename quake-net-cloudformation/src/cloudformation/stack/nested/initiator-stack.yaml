AWSTemplateFormatVersion: 2010-09-09
Description: QuakeNet Cron Trigger Resources

Parameters:
  DeploymentBucketName:
    Description: The deployment bucket
    Type: String
  RolePermissionsBoundary:
    Description: An optional permissions boundary to associate with roles
    Type: String
  InitiatorLambdaMemorySize:
    Description: The amount of memory for the initiator lambda
    Type: Number
  InitiatorLambdaTimeout:
    Description: The timeout in seconds for the initiator lambda
    Type: Number
  InitiatorCronExpression:
    Description: The EventBridge Schedule Expression to check for new event data
    Default: 'cron(0 1 * * ? *)'
    Type: String
  DefaultStartDate:
    Description: The earliest date to check for events when initializing the earthquake data set
    Default: '1660-01-01'
    Type: String
  InitiatorCompleteTopicArn:
    Type: String
  QuakeNetSourceBucketName:
    Type: String
  HttpRequestTimeoutMs:
    Description: The request timeout in milliseconds for HTTP requests
    Type: Number
  HttpConnectionTimeoutMs:
    Description: The connection timeout in milliseconds for HTTP requests
    Type: Number
  Version:
    Description: The build version
    Type: String


Conditions:
  HasRolePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - ""
          - !Ref RolePermissionsBoundary

Resources:
  InitiatorLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary:
        Fn::If:
          - HasRolePermissionsBoundary
          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${RolePermissionsBoundary}
          - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:logs:*:*:*
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        - PolicyName: SNS
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref InitiatorCompleteTopicArn
                Action:
                  - sns:Publish
        - PolicyName: S3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:s3:::${QuakeNetSourceBucketName}/*
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
              - Effect: Allow
                Resource: !Sub arn:${AWS::Partition}:s3:::${QuakeNetSourceBucketName}
                Action:
                  - s3:ListBucket


  InitiatorLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Determines dates to query for USGS earthquake events
      Code:
        S3Bucket: !Ref DeploymentBucketName
        S3Key: !Sub lambda/quake-net-initiator-${Version}-lambda.zip
      Handler: edu.colorado.cires.mgg.quakenet.lambda.initiator.InitiatorLambda::handleRequest
      Runtime: java11
      MemorySize: !Ref InitiatorLambdaMemorySize
      Timeout: !Ref InitiatorLambdaTimeout
      ReservedConcurrentExecutions: 1
      Role: !GetAtt InitiatorLambdaRole.Arn
      Environment:
        Variables:
          DOWNLOAD_BUCKET: !Ref QuakeNetSourceBucketName
          DEFAULT_START_DATE: !Ref DefaultStartDate
          CONNECTION_TIMEOUT_MS: !Ref HttpConnectionTimeoutMs
          REQUEST_TIMEOUT_MS: !Ref HttpRequestTimeoutMs
          TOPIC_ARN: !Ref InitiatorCompleteTopicArn



  CronEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Cron trigger to grab new quake events
      ScheduleExpression: !Ref InitiatorCronExpression
      State: ENABLED
      Targets:
        - Arn: !GetAtt InitiatorLambda.Arn
          Id: EventGrabberCron


  InitiatorLambdaCronPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt InitiatorLambda.Arn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CronEventRule.Arn